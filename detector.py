# from __future__ import print_function
import zmq as z
import time,sys

import pickle
import pandas as pd
import numpy as np
from sklearn.preprocessing import LabelEncoder, OneHotEncoder


# flush stdout and get context from C program
sys.stdout.flush()
context = z.Context()

# Connect to socket
socket = context.socket(z.REQ)
socket.connect("tcp://127.0.0.1:5555")
print("connected")

model = pickle.load(open("model.pickle.dat", "rb"))

#le = LabelEncoder()
#
while True:
    # get string from socket
    incoming_string_ohc = np.array(socket.recv_string())
    #arr = np.array([incoming_string_ohc])
    #encoded = le.fit_transform(arr[0])
    # get prediction
    pred = model.predict(incoming_string_ohc)
    socket.send(str(pred))

